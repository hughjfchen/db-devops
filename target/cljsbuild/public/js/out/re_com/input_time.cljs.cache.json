["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$parseInt",["^ "],"~$isNaN",["^ "],"~$Error",["^ "],"~$goog",["^ ","~$DEBUG",["^ "]]],"~:use-macros",["^ ","~$validate-args-macro","~$re-com.validate","~$handler-fn","~$re-com.core"],"~:excludes",["~#set",[]],"~:name","~$re-com.input-time","~:imports",null,"~:requires",["^ ","~$reagent","~$reagent.core","^D","^D","^:","^:","~$re-com.text","^E","~$re-com.box","^F","~$re-com.util","^G"],"~:uses",["^ ","~$html-attr?","^:","~$h-box","^F","~$deref-or-value","^G","~$css-style?","^:","~$label","^E","~$number-or-string?","^:","~$pad-zero-number","^G","~$gap","^F"],"~:defs",["^ ","~$text->time",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","~:line",50,"~:column",8,"~:end-line",50,"~:end-column",18,"~:private",true,"~:arglists",["~#list",["~$quote",["^10",[["~$text"]]]]],"~:doc","return as a time int, the contents of 'text'"],"^Z",true,"^?","~$re-com.input-time/text->time","~:variadic",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",18,"~:method-params",["^10",[["^12"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^W",1,"^V",50,"^X",50,"~:max-fixed-arity",1,"~:fn-var",true,"^[",["^10",["^11",["^10",[["^12"]]]]],"^13","return as a time int, the contents of 'text'"],"~$on-defocus",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",116,"^W",8,"^X",116,"^Y",18,"^Z",true,"^[",["^10",["^11",["^10",[["~$text-model","~$min","~$max","~$callback","~$previous-val"]]]]],"^13","Called when the field looses focus.\n   Re-validate what has been entered, comparing to mins and maxs.\n   Invoke the callback as necessary"],"^Z",true,"^?","~$re-com.input-time/on-defocus","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",18,"^16",["^10",[["^1<","^1=","^1>","^1?","^1@"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",116,"^X",116,"^19",5,"^1:",true,"^[",["^10",["^11",["^10",[["^1<","^1=","^1>","^1?","^1@"]]]]],"^13","Called when the field looses focus.\n   Re-validate what has been entered, comparing to mins and maxs.\n   Invoke the callback as necessary"],"~$valid-time?",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",74,"^W",8,"^X",74,"^Y",19,"^Z",true,"^[",["^10",["^11",["^10",[["~$time"]]]]]],"^Z",true,"^?","~$re-com.input-time/valid-time?","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",19,"^16",["^10",[["^1C"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",74,"^X",74,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^1C"]]]]]],"~$input-time-args-desc",["^ ","^?","~$re-com.input-time/input-time-args-desc","^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",127,"^W",1,"^X",127,"^Y",26,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",127,"^W",6,"^X",127,"^Y",26],"~:tag","~$cljs.core/IVector"],"~$time->hrs",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",15,"^W",8,"^X",15,"^Y",17,"^Z",true,"^[",["^10",["^11",["^10",[["^1C"]]]]]],"^Z",true,"^?","~$re-com.input-time/time->hrs","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",17,"^16",["^10",[["^1C"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",15,"^X",15,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^1C"]]]]]],"~$time->mins",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",10,"^W",8,"^X",10,"^Y",18,"^Z",true,"^[",["^10",["^11",["^10",[["^1C"]]]]]],"^Z",true,"^?","~$re-com.input-time/time->mins","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",18,"^16",["^10",[["^1C"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",10,"^X",10,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^1C"]]]]]],"~$triple->time",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",25,"^W",8,"^X",25,"^Y",20,"^Z",true,"^[",["^10",["^11",["^10",[[["~$hr","~$_","~$mi"]]]]]],"^13","Return a time integer from a triple int vector of form  [H  _  M]"],"^Z",true,"^?","~$re-com.input-time/triple->time","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",20,"^16",["^10",[["~$p__60915"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",25,"^X",25,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[[["^1N","~$_","^1O"]]]]]],"^13","Return a time integer from a triple int vector of form  [H  _  M]"],"~$valid-text?",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",66,"^W",8,"^X",66,"^Y",19,"^Z",true,"^[",["^10",["^11",["^10",[["^12"]]]]],"^13","Return true if text passes basic time validation.\n   Can't do to much validation because user input might not be finished.\n   Why?  On the way to entering 6:30, you must pass through the invalid state of '63'.\n   So we only really check against the triple-extracting regular expression"],"^Z",true,"^?","~$re-com.input-time/valid-text?","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",19,"^16",["^10",[["^12"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",66,"^X",66,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^12"]]]]],"^13","Return true if text passes basic time validation.\n   Can't do to much validation because user input might not be finished.\n   Why?  On the way to entering 6:30, you must pass through the invalid state of '63'.\n   So we only really check against the triple-extracting regular expression"],"~$time->text",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",59,"^W",8,"^X",59,"^Y",18,"^Z",true,"^[",["^10",["^11",["^10",[["^1C"]]]]],"^13","return a string of format HH:MM for 'time'"],"^Z",true,"^?","~$re-com.input-time/time->text","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",18,"^16",["^10",[["^1C"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",59,"^X",59,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^1C"]]]]],"^13","return a string of format HH:MM for 'time'"],"~$triple-seeking-re",["^ ","^?","~$re-com.input-time/triple-seeking-re","^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",39,"^W",1,"^X",40,"^Y",20,"^Z",true,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",40,"^W",3,"^X",40,"^Y",20,"^Z",true],"^1G","~$any"],"~$on-new-keypress",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",101,"^W",8,"^X",101,"^Y",23,"^Z",true,"^[",["^10",["^11",["^10",[["~$event","^1<"]]]]],"^13","Called each time the <input> field gets a keypress, or paste operation.\n   Rests  the text-model only if the new text is valid"],"^Z",true,"^?","~$re-com.input-time/on-new-keypress","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",23,"^16",["^10",[["^1Z","^1<"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",101,"^X",101,"^19",2,"^1:",true,"^[",["^10",["^11",["^10",[["^1Z","^1<"]]]]],"^13","Called each time the <input> field gets a keypress, or paste operation.\n   Rests  the text-model only if the new text is valid"],"~$to-int",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",19,"^W",8,"^X",19,"^Y",14,"^Z",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^13","Parse the string 's' to a valid int. On parse failure, return 0"],"^Z",true,"^?","~$re-com.input-time/to-int","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",14,"^16",["^10",[["~$s"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",19,"^X",19,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^13","Parse the string 's' to a valid int. On parse failure, return 0"],"~$extract-triple-from-text",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",42,"^W",8,"^X",42,"^Y",32,"^Z",true,"^[",["^10",["^11",["^10",[["^12"]]]]]],"^Z",true,"^?","~$re-com.input-time/extract-triple-from-text","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",32,"^16",["^10",[["^12"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",42,"^X",42,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^12"]]]]]],"~$validate-arg-times",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",82,"^W",8,"^X",82,"^Y",26,"^Z",true,"^[",["^10",["^11",["^10",[["~$model","~$minimum","~$maximum"]]]]]],"^Z",true,"^?","~$re-com.input-time/validate-arg-times","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",26,"^16",["^10",[["^25","^26","^27"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",82,"^X",82,"^19",3,"^1:",true,"^[",["^10",["^11",["^10",[["^25","^26","^27"]]]]]],"~$force-valid-time",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",90,"^W",8,"^X",90,"^Y",24,"^Z",true,"^[",["^10",["^11",["^10",[["^1C","^1=","^1>","~$previous"]]]]],"^13","Validate the time supplied.\n   Return either the time or, if it is invalid, return something valid"],"^Z",true,"^?","~$re-com.input-time/force-valid-time","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",24,"^16",["^10",[["^1C","^1=","^1>","^2:"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",90,"^X",90,"^19",4,"^1:",true,"^[",["^10",["^11",["^10",[["^1C","^1=","^1>","^2:"]]]]],"^13","Validate the time supplied.\n   Return either the time or, if it is invalid, return something valid"],"~$input-time",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",141,"^W",7,"^X",141,"^Y",17,"^[",["^10",["^11",["^10",[["~$&",["^ ","~:keys",["^25","^26","^27","~$on-change","~$class","~$style","~$attr"],"~:as","~$args","~:or",["^ ","^26",0,"^27",2359]]]]]]],"^13","I return the markup for an input box which will accept and validate times.\n   Parameters - refer input-time-args above","~:top-fn",["^ ","^15",true,"^19",0,"^16",[["^10",[["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^[",["^10",[["~$&",["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^18",["^10",[null]]]],"^?","~$re-com.input-time/input-time","^15",true,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",17,"^2E",["^ ","^15",true,"^19",0,"^16",[["^10",[["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^[",["^10",[["~$&",["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^18",["^10",[null]]],"^16",[["^10",[["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^17",null,"^18",["^10",[null]],"^W",1,"^V",141,"^X",141,"^19",0,"^1:",true,"^[",["^10",[["~$&",["^ ","^2=",["^25","^26","^27","^2>","^2?","^2@","^2A"],"^2B","^2C","^2D",["^ ","^26",0,"^27",2359]]]]],"^13","I return the markup for an input box which will accept and validate times.\n   Parameters - refer input-time-args above"],"~$lose-focus-if-enter",["^ ","^S",null,"^T",["^ ","^U","/Users/chenjinfen/Desktop/projects/CMB/IMAVP/2017/db-devops/05-dev/db-devops/target/cljsbuild/public/js/out/re_com/input_time.cljs","^V",109,"^W",8,"^X",109,"^Y",27,"^Z",true,"^[",["^10",["^11",["^10",[["~$ev"]]]]],"^13","When Enter is pressed, force the component to lose focus"],"^Z",true,"^?","~$re-com.input-time/lose-focus-if-enter","^15",false,"^U","target/cljsbuild/public/js/out/re_com/input_time.cljs","^Y",27,"^16",["^10",[["^2H"]]],"^17",null,"^18",["^10",[null,null]],"^W",1,"^V",109,"^X",109,"^19",1,"^1:",true,"^[",["^10",["^11",["^10",[["^2H"]]]]],"^13","When Enter is pressed, force the component to lose focus"]],"~:require-macros",["^ ","^<","^<","^C","^D","^D","^D","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^>",["~:description","~:children","~:div.time-icon","~:disabled","~:else","~:i.zmdi.zmdi-hc-fw-rc.zmdi-time","~:default","^?","~:value","~:maximum","~:hide-border?","~:width","~:on-blur","~:type","~:style","~:on-key-up","~:class","~:minimum","~:show-icon?","~:code","~:position","~:validate-fn","~:br","~:input","~:on-change","~:border","~:disabled?","~:required","~:height","~:span","~:margin","~:model","~:attr"]],"~:order",["^2Q","^?","^3;","^2Y","^35","^2M","^3?","^38","^2S","^31","^2U","^3:","^32","^2V","^2W","^3<","^30","^2Z","^3@","^3=","^33","^36","^39","^2N","^37","^2T","^2P","^2X","^2[","^2O","^2R","^34","^3>"]],"^13",null]